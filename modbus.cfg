## part of git repository OH2-cts700 for Nilan Compact P heat pumps with cts700 touch control
## my modbus binding configuration
## you have to adapt the TCP address 
## you might want to adapt the poll

# sets refresh interval to Modbus polling service.
# Value in milliseconds (optional, defaults to 200)
poll=10000

## Example of Modbus TCP slave

# Connection parameters to Modbus TCP server ("slave"), values separated by colon (:)
# - host or ip of the modbus server ("slave"), mandatory
# - port, optional, default 502
# - interTransactionDelayMillis, optional, in milliseconds, default 60
# - reconnectAfterMillis, optional, in milliseconds, default 0
# - interConnectDelayMillis, optional, in milliseconds, default 0
# - connectMaxTries, optional, default 3
# - connectTimeout, optional, in milliseconds, default 0 (=infinite or OS default)
#
# As a general rule, usually only host needs to be specified. Parameters other than host 
# and port should be overridden only in cases when extreme performance is required, or when there are
# errors with the default parameter values.
#
# See wiki for more details.
#
#
#
#    (slave name)      (host or IP)
#    |                 |             (port)
#    |                 |             |   (interTransactionDelayMillis, in milliseconds)
#    |                 |             |   |  (reconnectAfterMillis, in milliseconds)
#    |                 |             |   |  | (interConnectDelayMillis, in milliseconds)
#    |                 |             |   |  | | (connectMaxTries)
#    |                 |             |   |  | | | (connectTimeout)
#    |                 |             |   |  | | | |
#tcp.slave1.connection=192.168.1.100:502:60:0:0:3:100

# The data type, can be "coil" "discrete" "holding" "input". See wiki for more details.
#tcp.slave1.type=

# The slave id (optional, defaults to '1')
#tcp.slave1.id=

# The slave start address (optional, defaults to '0')
#tcp.slave1.start=

# The number of data item to read
# (optional, defaults to '0' - but set it to something meaningful)
#tcp.slave1.length=

# Value type, required for combined registers (details: http://www.simplymodbus.ca/FAQ.htm#Types)
# Can be "bit", "int8", "uint8", "int16", "uint16", "int32", "uint32", "float32"
# (optional, defaults to 'uint16')
#tcp.slave1.valuetype=

# For other slave parameters, consult the wiki.

#writemultipleregisters=true



##### Nilan CTS-700 supports the function codes: 
#####  03 - Read Holding Registers
#####  04 - Read Input Registers
#####  06 - Preset/Write Single *Holding* Registers
#####  16 - Preset/Write Multiple *Holding* Registers

# temperature sensors t1-t12 - VAL_DEV_TSENS1 - VAL_DEV_TSENS12
tcp.NilanTemp.connection=192.168.5.107:502
tcp.NilanTemp.id=1
tcp.NilanTemp.start=5152
tcp.NilanTemp.length=12
tcp.NilanTemp.type=input 

# regulation mode - prmRegulationMode
tcp.NilanRegulationMode.connection=192.168.5.107:502
tcp.NilanRegulationMode.id=1
tcp.NilanRegulationMode.start=5432
tcp.NilanRegulationMode.length=1
tcp.NilanRegulationMode.updateunchangeditems=true
tcp.NilanRegulationMode.type=input 
#holding or input possible

# user temperature set point & user fan speed set point - prmUserTemperature - 
tcp.NilanTempSet.connection=192.168.5.107:502
tcp.NilanTempSet.id=1
tcp.NilanTempSet.start=4746
tcp.NilanTempSet.length=2
tcp.NilanTempSet.type=input

# user warm water temperature set point - prmUserTempDHW 
tcp.NilanTempDWHSet.connection=192.168.5.107:502
tcp.NilanTempDWHSet.id=1
tcp.NilanTempDWHSet.start=5548
tcp.NilanTempDWHSet.length=1
tcp.NilanTempDWHSet.type=input

# user working mode - 
tcp.NilanWorkingMode.connection=192.168.5.107:502
tcp.NilanWorkingMode.id=1
tcp.NilanWorkingMode.start=1047
tcp.NilanWorkingMode.length=1
tcp.NilanWorkingMode.type=input


